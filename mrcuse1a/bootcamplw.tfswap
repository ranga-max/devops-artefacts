// Copyright 2020,2022 Sven Erik Knop sven@confluent.io
// All rights reserved

// Provider

provider "aws" {
  region     = var.region

  default_tags {
    tags = {
      owner_name = var.owner-name
      owner_email = var.owner-email
      purpose = var.purpose
    }
  }
}

// Resources



resource "aws_instance" "brokers" {
  count         = var.broker-count
  ami           = var.aws-ami-id
  instance_type = var.broker-instance-type
  availability_zone = var.availability-zone[count.index % length(var.availability-zone)]

    # security_groups = ["${var.security_group}"]
  key_name = var.key-name

  root_block_device {
    volume_size = 120 # 64 GB
  }

  tags = {
    Name = "${var.owner-name}-broker-${count.index}"
    description = "broker nodes - Managed by Terraform"
    nice-name = "kafka-${count.index}"
    big-nice-name = "follower-kafka-${count.index}"
    brokerid = count.index
    role = "broker"
    sshUser = var.linux-user
    # sshPrivateIp = true // this is only checked for existence, not if it's true or false by terraform.py (ati)
    createdBy = "terraform"
    Schedule = "kafka-mon-8am-fri-6pm"
    # ansible_python_interpreter = "/usr/bin/python3"
    #EntScheduler = "mon,tue,wed,thu,fri;1600;mon,tue,wed,thu;fri;sat;0400;"
    region = var.region
    role_region = "brokers-${var.region}"
  }

  subnet_id = var.subnet-id[count.index % length(var.subnet-id)]
  vpc_security_group_ids = var.vpc-security-group-ids
  associate_public_ip_address = true
}

resource "aws_route53_record" "brokers" {
  count = var.broker-count
  allow_overwrite = true
  zone_id = var.hosted-zone-id
  name = "kafka-${count.index}.${var.dns-suffix}"
  type = "A"
  ttl = "300"
  records = ["${element(aws_instance.brokers.*.private_ip, count.index)}"]
}

resource "aws_route53_record" "schema" {
  count = var.schema-count
  allow_overwrite = true
  zone_id = var.hosted-zone-id
  name = "schema-${count.index}.${var.dns-suffix}"
  type = "A"
  ttl = "300"
  records = ["${element(aws_instance.brokers.*.private_ip, count.index)}"]
  #records = ["${element(aws_instance.schema.*.private_ip, count.index)}"]
}

resource "aws_route53_record" "control-center" {
  count = var.c3-count
  allow_overwrite = true
  zone_id = var.hosted-zone-id
  name = "controlcenter-${count.index}.${var.dns-suffix}"
  type = "A"
  ttl = "300"
  records = ["${element(aws_instance.brokers.*.private_ip, count.index)}"]
  #records = ["${element(aws_instance.control-center.*.private_ip, count.index)}"]
}

resource "aws_route53_record" "zookeepers" {
  count = var.zk-count
  allow_overwrite = true
  zone_id = var.hosted-zone-id
  name = "zookeeper-${count.index}.${var.dns-suffix}"
  type = "A"
  ttl = "300"
  records = ["${element(aws_instance.brokers.*.private_ip, count.index)}"]
  #records = ["${element(aws_instance.zookeepers.*.private_ip, count.index)}"]
}

